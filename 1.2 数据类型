#16/10/2017
"""
1 列表，元组
"""
'''
1.
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu"]
print(names)
print("取第一个名字：",names[0])
print(names[1:3])   #起始位置包括，结束位置不包括-----切片
print(names[-1])    #取最后一个位置
print(names[-2:])   #取最后的值 -2开始到最后结束
print(names[:2])
print(names[0:2])
'''
'''
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu"]
names.append("lingxiao")    #追加
names.insert(0,"ling")  #插入某一个位置前面
names.insert(3,"zhiying")
print(names)
'''
'''
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu"]
names[2]="xiaolong" #替换
print(names)
'''
'''
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu"]
names.remove("Lisi")    #直接删除位置
del names[0]    #删除位置的下标
names.pop() #删除最后一个
print(names)
'''
'''
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu"]
print(names.index("Lisi"))  #取下标
print(names[names.index("Zhangsan")])   #嵌套使用
'''
'''
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu","Wangwu","Zhaoliu"]
print(names.count("Zhaoliu"))   #计数重复的个数
names.reverse()     #反转顺序
print(names)
names.sort()    #排序,安装ASIC码里面的来排序
print(names)
names2 = [1,2,3,4,]
names.extend(names2)    #合并到一个列表
print(names)
names.clear()   #清空
'''
'''
names = ["Zhangsan","Lisi","Wangwu","Zhaoliu","Wangwu","Zhaoliu"]
names2 = [1,2,3,4]
names.extend(names2)    #合并列表
print(names)
'''

#17/10/2017
'''
names = ["Zhangsan","Lisi",["xiaolong","ling"],"Wangwu","Zhaoliu","Wangwu","Zhaoliu"]
names2 = names.copy()   #浅copy，复制第一层的内存地址了，下一层不会copy,
print(names)
print(names2)
names[0]="张三"
#names[2][0]="小龙"
print(names)
print(names2)
'''
#深COPY
'''
import copy
names = ["Zhangsan","Lisi",["xiaolong","ling"],"Wangwu","Zhaoliu","Wangwu","Zhaoliu"]
names2 = copy.deepcopy(names)
names[0] = "张三"
print(names)
print(names2)
'''
#切片
'''
names = ["Zhangsan","Lisi",["xiaolong","ling"],"Wangwu","Zhaoliu","Wangwu","Zhaoliu"]
print(names[0:-1:2])    #开始到结束，每隔两个切片,-1代表最后
print(names[::2])  #代表最后一个但是不包括最后一个，每隔两个切片
#range(1,10,2)   #1-10,每隔两个显示
#for i in names:
#   print(i)
'''
'''
names = [1,2,3,4,5,6,7,1,2,3,1,2,3]
print(names[0:-1:2])
print(names[::2])   #所有的切片是顾头不顾尾
'''
#浅copy使用：比如两个人有共同的属性。用来创建这种两个帐号。
"""
import copy
person=['name',['gongzi','1w']]
'''p1=copy.copy(person)    
p2=person[:]
p3=list(person)
'''
p1=person[:]
p2=person[:]
p1[0]='zzy'
p2[0]='lxl'
p1[1][1]=100
print(p1)
print(p2)
"""
#元组tuple
'''
names = ('zsan','lisi')   #只能查，不可变。两个方法count和index
'''
#简单购物车
#salary 英 [ˈsæləri] n.薪水，薪金，薪俸 ,工资
#digit 英[ˈdɪdʒɪt]n.数字
product_list=[
    ["iphone","5888",],
    ["ipad","488",],
    ["mac pro","8888",],
    ["iwatch","6888",],
    ["bike","3888",],
    ["python book","88"]
]
shopping_cart=[]
w_msg = "Welcome to My Shop"
print(w_msg.center(50,"-"))
salary=input("Please input your salary:")
if salary.isdigit():
    salary=int(salary)
    while True:
#取下标，两种方法：
#        for item in product_list:
#            print(product_list.index(item),item)
#item 项目，项，条款，一件商品（物品）
       for index,item in enumerate(product_list):
           print(index,item)
       user_choice = input("请输入你要购买的商品编号：")
       if user_choice.isdigit():
            user_choice=int(user_choice)
            if user_choice < len(product_list) and user_choice >= 0 :
                p_item = product_list[user_choice]
                print(p_item)
# len() 方法返回对象（字符、列表、元组等）长度或项目个数
#定义一个变量p_item为商品列表product_list的编号
                if int(p_item[1]) <= salary:
                    shopping_cart.append(p_item)
                    salary -= int(p_item[1])
                    print("Added %s into shopping cart,your current balance is \033[31;1m %s\033[0m" % (p_item, salary) )
                else:
                    print("\033[41;1m你的余额只剩[%s]啦，你还买个毛线啊\033[0m" % salary)
            else:
                print("您购买的商品 [%s] 不存在！请重新选择," %user_choice)
       elif user_choice == 'q':
           q_msg="按q退出，谢谢!"
           print(q_msg.center(50,'-'))
           for p in shopping_cart:
               print(p)
           print("您的月是:[%s]"%salary)
           exit()
       else:
           print("您输入的工资无效！invalid options...")


#18/10/2017
#字符串常用操作
'''
name = "lingxiao\tlong,my name is {name} my age is  {year} old !"
print(name.capitalize())
#首字母大写
print(name.count("l"))
#统计字符串里面有多少个字母等
print(name.center(50,'-'))
#
print(name.encode())
#把字符串转为二进制
print(name.endswith('g'))
#判断一个字符串以什么结尾
print(name.expandtabs(tabsize=10))
#tab键
print(name.find('xiao'))
#查找字符串在什么位置,字符的下标
print(name.format(name='xiaolong',year='25'))
print('123abc'.isalpha())
#判断是否是阿拉伯字母
print('123abc'.isalpha())
#判断是否是纯英文字母
print('123'.isdecimal())
#判断是否是十进制
print('123abc'.isdigit())
#判断是否是一个整数
print('_123abc'.isidentifier())
#判断是否是一个合法的标识符（变量名）
print("abc".islower())
#判断是否是小写
print('123'.isnumeric())
#判断是否是数字，整数，
print('  '.isspace())
#判断是否是一个空格
print('123@qq.com'.join("=="))
print('+'.join(['1','2','3']))
print(''.join(['1','2','3']))
#可以将列表转换为字符串
print(name.ljust(50,'*'))
print(name.rjust(50,'&'))
#
print('\nXiaolong'.lstrip())
print('Xiaolong\n'.rstrip())
print('   Xiaolong\n'.strip())
#去除空格
p = str.maketrans("abcdefjh","12345678")
print("xalfjc".translate(p))
#转换
print('xiaolong'.replace('o','O',1))
print('xiaolong'.replace('o','O',2))
print('xiaolong'.rfind('o'))
#替换
print('xiao long'.split(' '))
print('Xiaolong Ling'.splitlines())
#可以将字符串转变为列表
print('Xiaolong Ling'.swapcase())
#
print('ling xiaolong'.title())
#设置标题
'''
#字典
#18/10/2017
#字符串常用操作
'''
name = "lingxiao\tlong,my name is {name} my age is  {year} old !"
print(name.capitalize())
#首字母大写
print(name.count("l"))
#统计字符串里面有多少个字母等
print(name.center(50,'-'))
#
print(name.encode())
#把字符串转为二进制
print(name.endswith('g'))
#判断一个字符串以什么结尾
print(name.expandtabs(tabsize=10))
#tab键
print(name.find('xiao'))
#查找字符串在什么位置,字符的下标
print(name.format(name='xiaolong',year='25'))
print('123abc'.isalpha())
#判断是否是阿拉伯字母
print('123abc'.isalpha())
#判断是否是纯英文字母
print('123'.isdecimal())
#判断是否是十进制
print('123abc'.isdigit())
#判断是否是一个整数
print('_123abc'.isidentifier())
#判断是否是一个合法的标识符（变量名）
print("abc".islower())
#判断是否是小写
print('123'.isnumeric())
#判断是否是数字，整数，
print('  '.isspace())
#判断是否是一个空格
print('123@qq.com'.join("=="))
print('+'.join(['1','2','3']))
print(''.join(['1','2','3']))
#可以将列表转换为字符串
print(name.ljust(50,'*'))
print(name.rjust(50,'&'))
#
print('\nXiaolong'.lstrip())
print('Xiaolong\n'.rstrip())
print('   Xiaolong\n'.strip())
#去除空格
p = str.maketrans("abcdefjh","12345678")
print("xalfjc".translate(p))
#转换
print('xiaolong'.replace('o','O',1))
print('xiaolong'.replace('o','O',2))
print('xiaolong'.rfind('o'))
#替换
print('xiao long'.split(' '))
print('Xiaolong Ling'.splitlines())
#可以将字符串转变为列表
print('Xiaolong Ling'.swapcase())
#
print('ling xiaolong'.title())
#设置标题
'''

#23/10/2017
#字典:是一种key-value的数据类型，字典是无序的，key必须是唯一的
#没有下标，通过key去寻找，是无序的。
'''
info={
    'stu001':'xiaolong',
    'stu002':'ming',
    'stu003':'wu'
}
'''
#查
'''
print(info)
print(info['stu001'])
'''
#修改,增加
'''
info['stu001']="小龙"
info['stu004']="小红"
print(info['stu001'])
print(info)
'''
#删除
'''
del info["stu001"]
info.pop("stu002")#标准的删除
info.popitem()#随机删除
print(info)
'''
#查找
'''

print(info['stu003'])#如果一个key不存在，就报错，get不会，不存在只返回None
print(info.get('stu005'))#获取
print('stu004' in info)#标准用法
'''
#多级字典嵌套及操作
'''
info2 ={
    "山西":{
            '太原':['小店区','迎泽区'],
            '大同':['南郊区','大同县']
    },
    "山东":{
            '青岛':['市南区','市北区'],
            '济南':['天桥区','历下区']
    },
    "河北":{
            '石家庄':['正定县','栾城区'],
            '张家口':['桥西区','宣化区']
    }
}
#字典--->字典--->列表
print(info2)
print(info2['山西']['大同'][0])
print(info2.keys())#查看字典的Keys
print(info2.values())#查看字典的值
print(info2)
#循环字典
#方法1
for key in info:
    print(key,info[key])

#方法2
for k,v in info.items(): #会先把dict转成list,数据里大时莫用
    print(k,v)
'''
#三级菜单
#   1.打印省、市、县三级菜单
#   2.可返回上一级
#   3.可随时退出程序
#简单三级菜单
info ={
    "山西":{
            '太原':{
                    '迎泽区':['东峰路','朝阳街'],
                    '小店区':['南中环街','太榆路']
            },
            '大同':{
                    '南郊区':['同泉路','榆林路'],
                    '大同县':['天黎高速','s202']
            }
    },
    "山东":{
            '青岛':{
                '市南区':['延安三路','香港中路'],
                '市北区':['瑞昌路','杭州路']
            },
            '济南':{
                '天桥区':['建邦黄河大桥','济广高速'],
                '历下区':['窑头路','经十路']
            }
    },
    "河北":{
            '石家庄':{
                '正定县':['新城大道','车站南大街'],
                '栾城区':['河北实验中学','河北传媒学院']
            },
            '张家口':{
                '桥西区':['植物园','清泉花园'],
                '宣化区':['人民公园','洋河']
            }
    }
}
while True:
    for i01 in info:
        print(i01)
    choice01 = input("请输入省份：")
    if choice01 in info:
        for i02 in info[choice01]:
            print(i02)
        choice02 = input("请输入城市：")
        if choice02 in info[choice01]:
            for i03 in info[choice01][choice02]:
                print(i03)
            choice03 = input("请输入地区：")
            if choice03 in info[choice01][choice02]:
                for i04 in info[choice01][choice02][choice03]:
                    print('\t',i04)
                    pass
            elif choice03 == 'q':
                break
        elif choice03 == 'q':
            break
    elif choice02 == 'q':
        break
